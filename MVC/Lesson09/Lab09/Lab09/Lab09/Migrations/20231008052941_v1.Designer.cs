// <auto-generated />
using System;
using Lab09.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab09.Migrations
{
    [DbContext(typeof(DevXuongMocContext))]
    [Migration("20231008052941_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab09.Models.AdminLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LOG_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("ActionCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ACTION_CODE");

                    b.Property<string>("ActionName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ACTION_NAME");

                    b.Property<int?>("ActionType")
                        .HasColumnType("int")
                        .HasColumnName("ACTION_TYPE");

                    b.Property<int?>("AdminUserId")
                        .HasColumnType("int")
                        .HasColumnName("ADMIN_USER_ID");

                    b.Property<string>("AppCode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("APP_CODE");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<string>("Description")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("END_TIME");

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ERROR_CODE");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP_ADDRESS");

                    b.Property<int?>("LogLevel")
                        .HasColumnType("int")
                        .HasColumnName("LOG_LEVEL");

                    b.Property<string>("MenuCode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("MENU_CODE");

                    b.Property<string>("MenuName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("MENU_NAME");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("OBJECT_ID");

                    b.Property<string>("SessionId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("SESSION_ID");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("START_TIME");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<string>("ThreadId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("THREAD_ID");

                    b.Property<string>("UserLogin")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USER_LOGIN");

                    b.Property<string>("UserName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("USER_NAME");

                    b.Property<int?>("WebpagesActionId")
                        .HasColumnType("int")
                        .HasColumnName("WEBPAGES_ACTION_ID");

                    b.HasKey("LogId")
                        .HasName("PK__ADMIN_LO__4364C8822A822E87");

                    b.ToTable("ADMIN_LOG", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.AdminUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Account")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ACCOUNT");

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("AVATAR");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EMAIL");

                    b.Property<int?>("IdPhongBan")
                        .HasColumnType("int")
                        .HasColumnName("ID_PHONG_BAN");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ADMIN");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETE");

                    b.Property<int?>("MaNhanSu")
                        .HasColumnType("int")
                        .HasColumnName("MA_NHAN_SU");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime")
                        .HasColumnName("NGAY_CAP_NHAT");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime")
                        .HasColumnName("NGAY_TAO");

                    b.Property<string>("NguoiCapNhat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NGUOI_CAP_NHAT");

                    b.Property<string>("NguoiTao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NGUOI_TAO");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PHONE");

                    b.Property<string>("Salt")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("SALT")
                        .IsFixedLength();

                    b.Property<string>("SessionToken")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SESSION_TOKEN");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("TRANG_THAI");

                    b.HasKey("Id")
                        .HasName("PK__ADMIN_US__3214EC2739901ACE");

                    b.ToTable("ADMIN_USER", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IMAGE");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOTES");

                    b.Property<int>("Orders")
                        .HasColumnType("int")
                        .HasColumnName("ORDERS");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SUB_TITLE");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TITLE");

                    b.Property<string>("Type")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TYPE");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE");

                    b.Property<string>("Urls")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("URLS");

                    b.HasKey("Id")
                        .HasName("PK__BANNER__3214EC274D7E8BD5");

                    b.ToTable("BANNER", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Icon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ICON");

                    b.Property<bool?>("Isdelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MateTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MATE_TITLE");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_DESCRIPTION");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_KEYWORD");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("NOTES");

                    b.Property<int?>("Orders")
                        .HasColumnType("int")
                        .HasColumnName("ORDERS");

                    b.Property<int?>("Parentid")
                        .HasColumnType("int")
                        .HasColumnName("PARENTID");

                    b.Property<string>("Slug")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SLUG");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__PRODUCT___A88186B13985BFD1");

                    b.ToTable("CATEGORY", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMAIL");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PHONE");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.ToTable("CONTACT", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Extension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Icon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ICON");

                    b.Property<bool?>("Isdelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_DESCRIPTION");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_KEYWORD");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_TITLE");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("NOTES");

                    b.Property<int?>("Orders")
                        .HasColumnType("int")
                        .HasColumnName("ORDERS");

                    b.Property<int?>("Parentid")
                        .HasColumnType("int")
                        .HasColumnName("PARENTID");

                    b.Property<string>("Slug")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SLUG");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__PRODUCT___EXTENSION");

                    b.ToTable("EXTENSION", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.InforCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Facebook")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FACEBOOK");

                    b.Property<string>("Instagram")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("INSTAGRAM");

                    b.Property<string>("Logo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("LOGO");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_DESCRIPTION");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_KEYWORD");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_TITLE");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PHONE");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("Youtube")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("YOUTUBE");

                    b.HasKey("Id");

                    b.ToTable("INFOR_COMPANY", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Introduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<byte?>("Home")
                        .HasColumnType("tinyint")
                        .HasColumnName("HOME");

                    b.Property<string>("Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IMAGE")
                        .HasDefaultValueSql("('NO_IMAGE_AVAILABLE.jpg')");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("META_DESCRIPTION");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_KEYWORD");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_TITLE");

                    b.Property<int?>("Orders")
                        .HasColumnType("int")
                        .HasColumnName("ORDERS");

                    b.Property<int?>("Parentid")
                        .HasColumnType("int")
                        .HasColumnName("PARENTID");

                    b.Property<string>("Slug")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SLUG");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("TITLE");

                    b.Property<byte?>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("TYPE");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__INTRODUC__3214EC2715DFAD94");

                    b.ToTable("INTRODUCTIONS", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("Icon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ICON");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_DESCRIPTION");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_KEYWORD");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_TITLE");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("NOTES");

                    b.Property<int?>("Orders")
                        .HasColumnType("int")
                        .HasColumnName("ORDERS");

                    b.Property<int?>("Parentid")
                        .HasColumnType("int")
                        .HasColumnName("PARENTID");

                    b.Property<string>("Slug")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SLUG");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id")
                        .HasName("PK__MATERIAL___EXTENSION");

                    b.ToTable("MATERIAL", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CODE");

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IMAGE")
                        .HasDefaultValueSql("('NO_IMAGE_AVAILABLE.jpg')");

                    b.Property<bool?>("Isdelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Likes")
                        .HasColumnType("int")
                        .HasColumnName("LIKES");

                    b.Property<string>("MainKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MAIN_KEYWORD");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_DESCRIPTION");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_KEYWORD");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_TITLE");

                    b.Property<string>("Slug")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SLUG");

                    b.Property<double?>("Star")
                        .HasColumnType("float")
                        .HasColumnName("STAR");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Views")
                        .HasColumnType("int")
                        .HasColumnName("VIEWS");

                    b.HasKey("Id")
                        .HasName("PK__NEWS__3214EC27E639B94D");

                    b.ToTable("NEWS", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Isdelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Logo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LOGO")
                        .HasDefaultValueSql("('NO_IMAGE_AVAILABLE.jpg')");

                    b.Property<byte?>("Orders")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("ORDERS")
                        .HasDefaultValueSql("((1))");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("Id")
                        .HasName("PK__PARTNER__3214EC270260178F");

                    b.ToTable("PARTNER", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<int?>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CODE");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<byte?>("Home")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("HOME")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Hot")
                        .HasColumnType("tinyint")
                        .HasColumnName("HOT");

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IMAGE")
                        .HasDefaultValueSql("('NO_IMAGE_AVAILABLE.jpg')");

                    b.Property<bool?>("Isdelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Likes")
                        .HasColumnType("int")
                        .HasColumnName("LIKES");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_DESCRIPTION");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_KEYWORD");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("META_TITLE");

                    b.Property<decimal?>("PriceNew")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("PRICE_NEW");

                    b.Property<decimal?>("PriceOld")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("PRICE_OLD");

                    b.Property<string>("Size")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SIZE");

                    b.Property<string>("Slug")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SLUG");

                    b.Property<double?>("Star")
                        .HasColumnType("float")
                        .HasColumnName("STAR");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Views")
                        .HasColumnType("int")
                        .HasColumnName("VIEWS");

                    b.HasKey("Id")
                        .HasName("PK__PRODUCT__3214EC27E639B94D");

                    b.ToTable("PRODUCT", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.ProductExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("CONTENT");

                    b.Property<int?>("Eid")
                        .HasColumnType("int")
                        .HasColumnName("EID");

                    b.Property<int?>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.HasKey("Id")
                        .HasName("PK_PRODUCTEXTENSIONS");

                    b.ToTable("PRODUCT_EXTENSIONS", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("IMAGE");

                    b.Property<int?>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.HasKey("Id")
                        .HasName("PK_PRODUCTIMAGES");

                    b.ToTable("PRODUCT_IMAGES", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.ProductMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Mid")
                        .HasColumnType("int")
                        .HasColumnName("MID");

                    b.Property<int?>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.HasKey("Id")
                        .HasName("PK_PRODUCTMATERIALS");

                    b.ToTable("PRODUCT_MATERIALS", (string)null);
                });

            modelBuilder.Entity("Lab09.Models.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminCreated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_CREATED");

                    b.Property<string>("AdminUpdated")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADMIN_UPDATED");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IMAGE")
                        .HasDefaultValueSql("('NO_IMAGE_AVAILABLE.jpg')");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit")
                        .HasColumnName("ISDELETE");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOTES");

                    b.Property<int>("Orders")
                        .HasColumnType("int")
                        .HasColumnName("ORDERS");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SUB_TITLE");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Urls")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("URLS");

                    b.HasKey("Id")
                        .HasName("PK__SLIDES__3214EC279D085EE9");

                    b.ToTable("SLIDES", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
